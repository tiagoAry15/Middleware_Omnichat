name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main  # ajuste para o seu branch de produção

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
  TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
  TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER }}
  DIALOGFLOW_TYPE: ${{ secrets.DIALOGFLOW_TYPE }}
  DIALOGFLOW_PROJECT_ID: ${{ secrets.DIALOGFLOW_PROJECT_ID }}
  DIALOGFLOW_PRIVATE_KEY_ID: ${{ secrets.DIALOGFLOW_PRIVATE_KEY_ID }}
  DIALOGFLOW_PRIVATE_KEY: ${{ secrets.DIALOGFLOW_PRIVATE_KEY }}
  DIALOGFLOW_CLIENT_EMAIL: ${{ secrets.DIALOGFLOW_CLIENT_EMAIL }}
  DIALOGFLOW_CLIENT_ID: ${{ secrets.DIALOGFLOW_CLIENT_ID }}
  DIALOGFLOW_CLIENT_X509_CERT_URL: ${{ secrets.DIALOGFLOW_CLIENT_X509_CERT_URL }}
  IMAGE_NAME: flaskomnichat

jobs:
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Extract client_email field
      id: extract_field
      run: echo "CLIENT_EMAIL=$(echo $GCP_SA_KEY | jq -r '.client_email')" >> $GITHUB_ENV
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Set env vars for Cloud Function deployment
      run: |# Create an array with all the environment variable assignments
        ENV_VARS_ARRAY=(
          "TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}"
          "TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}"
          "TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}"
          "DIALOGFLOW_TYPE=${DIALOGFLOW_TYPE}"
          "DIALOGFLOW_PROJECT_ID=${DIALOGFLOW_PROJECT_ID}"
          "DIALOGFLOW_PRIVATE_KEY_ID=${DIALOGFLOW_PRIVATE_KEY_ID}"
          "DIALOGFLOW_PRIVATE_KEY=${DIALOGFLOW_PRIVATE_KEY}"
          "DIALOGFLOW_CLIENT_EMAIL=${DIALOGFLOW_CLIENT_EMAIL}"
          "DIALOGFLOW_CLIENT_ID=${DIALOGFLOW_CLIENT_ID}"
          "DIALOGFLOW_CLIENT_X509_CERT_URL=${DIALOGFLOW_CLIENT_X509_CERT_URL}"
        )
        
         # Join the array elements into a comma-separated string
        UPDATE_ENV_VARS_ARG=$(IFS=,; echo "${ENV_VARS_ARRAY[*]}")
        
        echo "UPDATE_ENV_VARS_ARG contents:"
        echo "$UPDATE_ENV_VARS_ARG" # Print the contents for inspection
        echo "UPDATE_ENV_VARS_ARG=$UPDATE_ENV_VARS_ARG" >> $GITHUB_ENV

    # Adicionando a autenticação com Workload Identity Provider
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        service_account: ${{ env.CLIENT_EMAIL }}

    - name: Build Docker Image
      run: | 
        docker build -t ${{ env.IMAGE_NAME }} .
        docker tag ${{ env.IMAGE_NAME }} gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}

    - name: Push Docker Image to Google Container Registry
      run: |
        gcloud auth configure-docker
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.IMAGE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }} \
          --platform managed \
          --region us-central1 \
          --set-env-vars $UPDATE_ENV_VARS_ARG
